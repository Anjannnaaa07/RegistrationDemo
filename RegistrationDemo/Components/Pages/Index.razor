@page "/index"
@inject HttpClient Http
@inject NavigationManager Nav
@using RegistrationDemo.Models;
@rendermode InteractiveServer

<h3>Registered Users</h3>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else if (users.Count == 0)
{
    <p>No users registered yet.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Select</th>
                <th>Username</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>
                        <input type="checkbox" @bind="user.IsSelected" />
                    </td>
                    <td>@user.Username</td>
                    <td>@user.Email</td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" class="btn btn-danger mb-2" @onclick=DeleteSelected>Delete Selected</button>
}

@code {
    private List<UserDto>? users;

    protected override async Task OnInitializedAsync()
    {
        Http.BaseAddress ??= new Uri(Nav.BaseUri);
        users = await Http.GetFromJsonAsync<List<UserDto>>("/api/users");
    }

    private void DeleteSelected()
    {
        var selectedUsers = users!.Where(u => u.IsSelected).ToList();

        foreach (var user in selectedUsers)
        {
            var response = Http.DeleteAsync($"/api/users/{user.Username}").Result;
            Console.WriteLine($"Deleting user: {user.Username}");
            if (response.IsSuccessStatusCode)
            {
                users.Remove(user);
            }
        }
    }
}
